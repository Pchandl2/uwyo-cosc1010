# Peyton Chandler
# UWYO COSC 1010
# 11/5/24
# HW 03
# Lab Section: 11
# Sources, people worked with, help given to: 
# your
# comments
# here



def leapyear(year):
    return (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0) 

def newyear(year):
    y = year -1
    day = (36 + y +(y//4) - (y // 100) + (y//400)) % 7
    return day

#def day_of_week():
    days_of_the_week = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]

#def Month_days():
    month_days = {1: 31, 2: 28, 3: 31, 4: 30, 5:31, 6:30, 7:31, 8: 31, 9: 30, 10:31, 11:30, 12:31 }

    if leapyear(year):
        month_days[2] = 29
def valid_date(month,day,year):
    month_days = {1: 31, 2: 28, 3: 31, 4: 30, 5:31, 6:30, 7:31, 8: 31, 9: 30, 10:31, 11:30, 12:31}
    if month == 2 and leapyear(year):
        month_days[2] = 29
    return 1,+ month <= 12 and 1 <= day <= month_days.get(month,0)
def dayofweekfordate (month,day,year):
    days_in_month = [31,28,31,30,31,30,31,31,30,31,30,31]
    days_of_the_week = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
    if leapyear(year):
        days_in_month[1] = 29
        
    firstdayofyear = newyear(year)
    daysfromnewyear = sum(days_in_month[:month-1])+(day-1)
    dayofweek = (firstdayofyear + daysfromnewyear)%7
    return days_of_the_week[dayofweek]
while True:
    print("type exit to stop")
    date_input = input("Enter date that you want (month/day/year (MM/DD/YYYY)): ")
    if '/' in date_input:
        month = int(date_input[:2])
        day = int(date_input[3:5])
        year = int(date_input[6:]) 
        dayoftheweek = dayofweekfordate(month,day,year)
        print(f"{date_input} is a {dayofweek}")
    elif date_input.lower() == "exit":
        break
    else:
        print("Try again with proper format")
